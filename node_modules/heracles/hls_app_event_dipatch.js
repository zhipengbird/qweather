import Log from './hls_plugin_log.js'
import Account from './hls_plugin_account.js'
import Runtime from './hls_plugin_runtime.js'
import { removeLoginUserInfo, removeLoginUserToken, saveHostAppEnvConfig } from './hls_app_env_storage.js'
import APP_EVENT from './hls_app_event.js'

const logPlugin = new Log();

const accountPlugin = new Account();

const runtimePlugin = new Runtime();

/**
 * 监听并且分发宿主App发过来的自定义事件通知
 */
export function startAppEventDispatch(options) {
	
	// #ifdef APP-PLUS
	
	logPlugin.writeDebugLog(JSON.stringify(options.referrerInfo.extraData))
	
	//保存宿主App的环境配置信息
	saveHostAppEnvConfig(options.referrerInfo.extraData)
	
	uni.onNativeEventReceive((event,data)=>{
		
		//再通过uni的通知给所有需要的页面
		let innerEvent = APP_EVENT.PREFIX + event
		let params = JSON.parse(data)
		uni.$emit(innerEvent, params)
	    let nativeMsg = '接收到宿主App消息 event：' + event + " data: " + data;
		console.log(nativeMsg)
			
		//登录成功之后，获取一下用户信息
		if(innerEvent == APP_EVENT.LOGIN) {
			accountPlugin.getUserInfo().then(res=> {
				logPlugin.writeDebugLog("收到登录成功事件后，刷新登录用户信息成功!")
			})
		}
		
		//登出后，删除登录用户信息
		if(innerEvent == APP_EVENT.LOGOUT) {
			removeLoginUserInfo();
			logPlugin.writeDebugLog("收到用户登出事件，删除登录用户信息!")
		}
		
		//收到小程序runtime更新通知
		if(innerEvent == APP_EVENT.RUNTIME_UPDATE) {
			uni.showModal({
				title:'更新提醒',
				content:'当前小程序版本已更新!',
				showCancel:false,
				confirmText:'立即刷新',
				complete() {
					plus.runtime.restart()
				}
			})
		}	
			
		//收到小程序下架通知
		if(innerEvent == APP_EVENT.APPLET_OFFLINE) {
			uni.showModal({
				title:'下架提醒',
				content:'当前小程序已下架!',
				showCancel:false,
				confirmText:'立即退出',
				complete() {
					if(hostAppEnvConfig.hls_os === 'android') {
						//调用插件关闭小程序
						runtimePlugin.exitApplet()
					} else {
						plus.runtime.quit()
					}
				}
			})
		}		
	})
	// #endif
	
	// #ifdef H5
		
	let callbackMethod = "__HLS_EVENT_DISPATCH__"
	window[callbackMethod] = function(res) {
		
		let innerEvent = APP_EVENT.PREFIX + res.event
		uni.$emit(innerEvent, res.data)
		
		//登录成功之后，获取一下用户信息
		if(innerEvent == APP_EVENT.LOGIN) {
			accountPlugin.getUserInfo().then(res=> {
				console.log("收到登录成功事件后，刷新登录用户信息成功!")
			})
		}
		
		//登出后，删除登录用户信息
		if(innerEvent == APP_EVENT.LOGOUT) {
			removeLoginUserInfo();
			console.log("收到用户登出事件，删除登录用户信息!")
		}
	}	
	// #endif
}